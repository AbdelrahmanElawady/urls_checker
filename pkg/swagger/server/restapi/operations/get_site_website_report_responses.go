// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/rawdaGastan/urls_checker/pkg/swagger/server/models"
)

// GetSiteWebsiteReportOKCode is the HTTP code returned for type GetSiteWebsiteReportOK
const GetSiteWebsiteReportOKCode int = 200

/*
GetSiteWebsiteReportOK Returns the status of links inside the website.

swagger:response getSiteWebsiteReportOK
*/
type GetSiteWebsiteReportOK struct {

	/*
	  In: Body
	*/
	Payload []*models.URLStatus `json:"body,omitempty"`
}

// NewGetSiteWebsiteReportOK creates GetSiteWebsiteReportOK with default headers values
func NewGetSiteWebsiteReportOK() *GetSiteWebsiteReportOK {

	return &GetSiteWebsiteReportOK{}
}

// WithPayload adds the payload to the get site website report o k response
func (o *GetSiteWebsiteReportOK) WithPayload(payload []*models.URLStatus) *GetSiteWebsiteReportOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get site website report o k response
func (o *GetSiteWebsiteReportOK) SetPayload(payload []*models.URLStatus) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSiteWebsiteReportOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.URLStatus, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetSiteWebsiteReportBadRequestCode is the HTTP code returned for type GetSiteWebsiteReportBadRequest
const GetSiteWebsiteReportBadRequestCode int = 400

/*
GetSiteWebsiteReportBadRequest Invalid website was provided.

swagger:response getSiteWebsiteReportBadRequest
*/
type GetSiteWebsiteReportBadRequest struct {
}

// NewGetSiteWebsiteReportBadRequest creates GetSiteWebsiteReportBadRequest with default headers values
func NewGetSiteWebsiteReportBadRequest() *GetSiteWebsiteReportBadRequest {

	return &GetSiteWebsiteReportBadRequest{}
}

// WriteResponse to the client
func (o *GetSiteWebsiteReportBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
