// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/rawdaGastan/urls_checker/pkg/swagger/server/models"
)

// GetCheckWebsiteOKCode is the HTTP code returned for type GetCheckWebsiteOK
const GetCheckWebsiteOKCode int = 200

/*
GetCheckWebsiteOK Returns the status of links inside the website.

swagger:response getCheckWebsiteOK
*/
type GetCheckWebsiteOK struct {

	/*
	  In: Body
	*/
	Payload []*models.URLStatus `json:"body,omitempty"`
}

// NewGetCheckWebsiteOK creates GetCheckWebsiteOK with default headers values
func NewGetCheckWebsiteOK() *GetCheckWebsiteOK {

	return &GetCheckWebsiteOK{}
}

// WithPayload adds the payload to the get check website o k response
func (o *GetCheckWebsiteOK) WithPayload(payload []*models.URLStatus) *GetCheckWebsiteOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get check website o k response
func (o *GetCheckWebsiteOK) SetPayload(payload []*models.URLStatus) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCheckWebsiteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.URLStatus, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetCheckWebsiteBadRequestCode is the HTTP code returned for type GetCheckWebsiteBadRequest
const GetCheckWebsiteBadRequestCode int = 400

/*
GetCheckWebsiteBadRequest Invalid website was provided.

swagger:response getCheckWebsiteBadRequest
*/
type GetCheckWebsiteBadRequest struct {
}

// NewGetCheckWebsiteBadRequest creates GetCheckWebsiteBadRequest with default headers values
func NewGetCheckWebsiteBadRequest() *GetCheckWebsiteBadRequest {

	return &GetCheckWebsiteBadRequest{}
}

// WriteResponse to the client
func (o *GetCheckWebsiteBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
